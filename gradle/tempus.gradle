apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.spongepowered.gradle"

defaultTasks "licenseFormat", "build"

group = "xyz.ferus"
archivesBaseName = project.name.toLowerCase()

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
    compileOnly "org.spongepowered:spongeapi:7.1.0-SNAPSHOT"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["-Xlint:all", "-Xlint:-path", "-parameters"]
    options.deprecation = true
    options.encoding = "UTF-8"
}

idea {
    module {
        inheritOutputDirs = true
    }
}

jar {
    manifest {
        attributes(
                "Specification-Title": api.name,
                "Specification-Version": api.version,
                "Specification-Vendor": api.organization,

                "Created-By": "${System.properties["java.version"]} (${System.properties["java.vendor"]})"
        )
    }
}

afterEvaluate {
    jar.manifest {
        if (commit) attributes["Git-Commit"] = commit
        if (branch) attributes["Git-Branch"] = branch
    }

    tasks.withType(AbstractArchiveTask) {
        if (duplicatesStrategy == DuplicatesStrategy.INCLUDE) {
            duplicatesStrategy = DuplicatesStrategy.FAIL
        }
    }
}

javadoc {
    options.encoding = "UTF-8"
    options.charSet = "UTF-8"
    options.links(
            "https://jd.spongepowered.org/7.0.0/"
    )
    
    options.addStringOption("Xdoclint:none", "-quiet")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

apply plugin: "net.minecrell.licenser"

license {
    ext {
        name = project.name
        organization = project.organization
        url = project.url
    }
    
    header = api.file("HEADER.txt")
    include "**/*.java"
    newLine = false
}

processResources {
    from "LICENSE.txt"
}

apply from: api.file("gradle/deploy.gradle")

task wrapper(type: Wrapper) {
    gradleVersion = api.gradleVersion
}
